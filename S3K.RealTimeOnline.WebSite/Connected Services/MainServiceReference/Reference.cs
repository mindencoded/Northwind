//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace S3K.RealTimeOnline.WebSite.MainServiceReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CustomerDto", Namespace="http://schemas.datacontract.org/2004/07/S3K.RealTimeOnline.Dtos")]
    [System.SerializableAttribute()]
    public partial class CustomerDto : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte[] AttachmentsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BusinessPhoneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompanyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CountryRegionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailAddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FaxNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FirstNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string HomePhoneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string JobTitleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MobilePhoneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NotesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StateProvinceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string WebPageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ZipPostalCodeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Address {
            get {
                return this.AddressField;
            }
            set {
                if ((object.ReferenceEquals(this.AddressField, value) != true)) {
                    this.AddressField = value;
                    this.RaisePropertyChanged("Address");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] Attachments {
            get {
                return this.AttachmentsField;
            }
            set {
                if ((object.ReferenceEquals(this.AttachmentsField, value) != true)) {
                    this.AttachmentsField = value;
                    this.RaisePropertyChanged("Attachments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BusinessPhone {
            get {
                return this.BusinessPhoneField;
            }
            set {
                if ((object.ReferenceEquals(this.BusinessPhoneField, value) != true)) {
                    this.BusinessPhoneField = value;
                    this.RaisePropertyChanged("BusinessPhone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string City {
            get {
                return this.CityField;
            }
            set {
                if ((object.ReferenceEquals(this.CityField, value) != true)) {
                    this.CityField = value;
                    this.RaisePropertyChanged("City");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Company {
            get {
                return this.CompanyField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyField, value) != true)) {
                    this.CompanyField = value;
                    this.RaisePropertyChanged("Company");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CountryRegion {
            get {
                return this.CountryRegionField;
            }
            set {
                if ((object.ReferenceEquals(this.CountryRegionField, value) != true)) {
                    this.CountryRegionField = value;
                    this.RaisePropertyChanged("CountryRegion");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EmailAddress {
            get {
                return this.EmailAddressField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailAddressField, value) != true)) {
                    this.EmailAddressField = value;
                    this.RaisePropertyChanged("EmailAddress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FaxNumber {
            get {
                return this.FaxNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.FaxNumberField, value) != true)) {
                    this.FaxNumberField = value;
                    this.RaisePropertyChanged("FaxNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FirstName {
            get {
                return this.FirstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FirstNameField, value) != true)) {
                    this.FirstNameField = value;
                    this.RaisePropertyChanged("FirstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string HomePhone {
            get {
                return this.HomePhoneField;
            }
            set {
                if ((object.ReferenceEquals(this.HomePhoneField, value) != true)) {
                    this.HomePhoneField = value;
                    this.RaisePropertyChanged("HomePhone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string JobTitle {
            get {
                return this.JobTitleField;
            }
            set {
                if ((object.ReferenceEquals(this.JobTitleField, value) != true)) {
                    this.JobTitleField = value;
                    this.RaisePropertyChanged("JobTitle");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastName {
            get {
                return this.LastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LastNameField, value) != true)) {
                    this.LastNameField = value;
                    this.RaisePropertyChanged("LastName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MobilePhone {
            get {
                return this.MobilePhoneField;
            }
            set {
                if ((object.ReferenceEquals(this.MobilePhoneField, value) != true)) {
                    this.MobilePhoneField = value;
                    this.RaisePropertyChanged("MobilePhone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Notes {
            get {
                return this.NotesField;
            }
            set {
                if ((object.ReferenceEquals(this.NotesField, value) != true)) {
                    this.NotesField = value;
                    this.RaisePropertyChanged("Notes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StateProvince {
            get {
                return this.StateProvinceField;
            }
            set {
                if ((object.ReferenceEquals(this.StateProvinceField, value) != true)) {
                    this.StateProvinceField = value;
                    this.RaisePropertyChanged("StateProvince");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string WebPage {
            get {
                return this.WebPageField;
            }
            set {
                if ((object.ReferenceEquals(this.WebPageField, value) != true)) {
                    this.WebPageField = value;
                    this.RaisePropertyChanged("WebPage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ZipPostalCode {
            get {
                return this.ZipPostalCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.ZipPostalCodeField, value) != true)) {
                    this.ZipPostalCodeField = value;
                    this.RaisePropertyChanged("ZipPostalCode");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="MainServiceReference.ICrudCustomerService")]
    public interface ICrudCustomerService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICrudCustomerService/SelectCustomer", ReplyAction="http://tempuri.org/ICrudCustomerService/SelectCustomerResponse")]
        System.IO.Stream SelectCustomer();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICrudCustomerService/SelectCustomer", ReplyAction="http://tempuri.org/ICrudCustomerService/SelectCustomerResponse")]
        System.Threading.Tasks.Task<System.IO.Stream> SelectCustomerAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICrudCustomerService/InsertCustomer", ReplyAction="http://tempuri.org/ICrudCustomerService/InsertCustomerResponse")]
        void InsertCustomer(S3K.RealTimeOnline.WebSite.MainServiceReference.CustomerDto customer);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICrudCustomerService/InsertCustomer", ReplyAction="http://tempuri.org/ICrudCustomerService/InsertCustomerResponse")]
        System.Threading.Tasks.Task InsertCustomerAsync(S3K.RealTimeOnline.WebSite.MainServiceReference.CustomerDto customer);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICrudCustomerService/UpdateCustomer", ReplyAction="http://tempuri.org/ICrudCustomerService/UpdateCustomerResponse")]
        void UpdateCustomer(string id, S3K.RealTimeOnline.WebSite.MainServiceReference.CustomerDto customer);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICrudCustomerService/UpdateCustomer", ReplyAction="http://tempuri.org/ICrudCustomerService/UpdateCustomerResponse")]
        System.Threading.Tasks.Task UpdateCustomerAsync(string id, S3K.RealTimeOnline.WebSite.MainServiceReference.CustomerDto customer);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICrudCustomerService/DeleteCustomer", ReplyAction="http://tempuri.org/ICrudCustomerService/DeleteCustomerResponse")]
        void DeleteCustomer(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICrudCustomerService/DeleteCustomer", ReplyAction="http://tempuri.org/ICrudCustomerService/DeleteCustomerResponse")]
        System.Threading.Tasks.Task DeleteCustomerAsync(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICrudCustomerService/MoveCustomer", ReplyAction="http://tempuri.org/ICrudCustomerService/MoveCustomerResponse")]
        void MoveCustomer();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICrudCustomerService/MoveCustomer", ReplyAction="http://tempuri.org/ICrudCustomerService/MoveCustomerResponse")]
        System.Threading.Tasks.Task MoveCustomerAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ICrudCustomerServiceChannel : S3K.RealTimeOnline.WebSite.MainServiceReference.ICrudCustomerService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CrudCustomerServiceClient : System.ServiceModel.ClientBase<S3K.RealTimeOnline.WebSite.MainServiceReference.ICrudCustomerService>, S3K.RealTimeOnline.WebSite.MainServiceReference.ICrudCustomerService {
        
        public CrudCustomerServiceClient() {
        }
        
        public CrudCustomerServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public CrudCustomerServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CrudCustomerServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CrudCustomerServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.IO.Stream SelectCustomer() {
            return base.Channel.SelectCustomer();
        }
        
        public System.Threading.Tasks.Task<System.IO.Stream> SelectCustomerAsync() {
            return base.Channel.SelectCustomerAsync();
        }
        
        public void InsertCustomer(S3K.RealTimeOnline.WebSite.MainServiceReference.CustomerDto customer) {
            base.Channel.InsertCustomer(customer);
        }
        
        public System.Threading.Tasks.Task InsertCustomerAsync(S3K.RealTimeOnline.WebSite.MainServiceReference.CustomerDto customer) {
            return base.Channel.InsertCustomerAsync(customer);
        }
        
        public void UpdateCustomer(string id, S3K.RealTimeOnline.WebSite.MainServiceReference.CustomerDto customer) {
            base.Channel.UpdateCustomer(id, customer);
        }
        
        public System.Threading.Tasks.Task UpdateCustomerAsync(string id, S3K.RealTimeOnline.WebSite.MainServiceReference.CustomerDto customer) {
            return base.Channel.UpdateCustomerAsync(id, customer);
        }
        
        public void DeleteCustomer(string id) {
            base.Channel.DeleteCustomer(id);
        }
        
        public System.Threading.Tasks.Task DeleteCustomerAsync(string id) {
            return base.Channel.DeleteCustomerAsync(id);
        }
        
        public void MoveCustomer() {
            base.Channel.MoveCustomer();
        }
        
        public System.Threading.Tasks.Task MoveCustomerAsync() {
            return base.Channel.MoveCustomerAsync();
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="MainServiceReference.ICrudEmployeeService")]
    public interface ICrudEmployeeService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICrudEmployeeService/SelectEmployee", ReplyAction="http://tempuri.org/ICrudEmployeeService/SelectEmployeeResponse")]
        void SelectEmployee();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICrudEmployeeService/SelectEmployee", ReplyAction="http://tempuri.org/ICrudEmployeeService/SelectEmployeeResponse")]
        System.Threading.Tasks.Task SelectEmployeeAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ICrudEmployeeServiceChannel : S3K.RealTimeOnline.WebSite.MainServiceReference.ICrudEmployeeService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CrudEmployeeServiceClient : System.ServiceModel.ClientBase<S3K.RealTimeOnline.WebSite.MainServiceReference.ICrudEmployeeService>, S3K.RealTimeOnline.WebSite.MainServiceReference.ICrudEmployeeService {
        
        public CrudEmployeeServiceClient() {
        }
        
        public CrudEmployeeServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public CrudEmployeeServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CrudEmployeeServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CrudEmployeeServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void SelectEmployee() {
            base.Channel.SelectEmployee();
        }
        
        public System.Threading.Tasks.Task SelectEmployeeAsync() {
            return base.Channel.SelectEmployeeAsync();
        }
    }
}
